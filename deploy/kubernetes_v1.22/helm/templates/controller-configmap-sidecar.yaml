apiVersion: v1
kind: ConfigMap
metadata:
  name: polaris-sidecar-injector
  namespace: polaris-system
  labels:
    app: sidecar-injector
data:
  values: |-
    {"clusterResources":true,"global":{"arch":{"amd64":2,"ppc64le":2,"s390x":2},"configNamespace":"polaris-system","configValidation":"false","controlPlaneSecurityEnabled":true,"defaultNodeSelector":{},"defaultPodDisruptionBudget":{"enabled":true},"defaultResources":{"requests":{"cpu":"10m"}},"disablePolicyChecks":true,"enableHelmTest":false,"enableTracing":true,"hub":"istio","imagePullPolicy":"Always","imagePullSecrets":[],"istioNamespace":"polaris-system","k8sIngress":{"enableHttps":false,"enabled":false,"gatewayName":"ingressgateway"},"localityLbSetting":{"enabled":true},"logAsJson":false,"logging":{"level":"default:info"},"meshExpansion":{"enabled":false,"useILB":false},"meshID":"","meshNetworks":{},"mtls":{"enabled":false},"multiCluster":{"enabled":false},"oneNamespace":false,"outboundTrafficPolicy":{"mode":"ALLOW_ANY"},"policyCheckFailOpen":false,"policyNamespace":"polaris-system","priorityClassName":"","prometheusNamespace":"polaris-system","proxy":{"accessLogEncoding":"TEXT","accessLogFile":"","accessLogFormat":"","autoInject":"enabled","clusterDomain":"cluster.local","componentLogLevel":"misc:error","concurrency":2,"dnsRefreshRate":"300s","enableCoreDump":false,"envoyAccessLogService":{"enabled":false,"host":null,"port":null},"envoyMetricsService":{"enabled":false,"host":null,"port":null},"envoyStatsd":{"enabled":false,"host":null,"port":null},"excludeIPRanges":"","excludeInboundPorts":"","excludeOutboundPorts":"","image":"proxyv2","includeIPRanges":"*","includeInboundPorts":"*","kubevirtInterfaces":"","logLevel":"warning","privileged":false,"protocolDetectionTimeout":"10ms","readinessFailureThreshold":30,"readinessInitialDelaySeconds":1,"readinessPeriodSeconds":2,"resources":{"limits":{"cpu":"2000m","memory":"1024Mi"},"requests":{"cpu":"100m","memory":"128Mi"}},"statusPort":15020,"tag":"1.7.0","tracer":"zipkin"},"proxy_init":{"image":"proxyv2","resources":{"limits":{"cpu":"100m","memory":"50Mi"},"requests":{"cpu":"10m","memory":"10Mi"}}},"sds":{"enabled":false,"udsPath":""},"tag":"1.5.8","telemetryNamespace":"polaris-system","tracer":{"datadog":{"address":"$(HOST_IP):8126"},"lightstep":{"accessToken":"","address":"","cacertPath":"","secure":true},"zipkin":{"address":""}},"trustDomain":"","useMCP":true,"xdsApiVersion":"v3"},"istio_cni":{"enabled":false},"sidecarInjectorWebhook":{"alwaysInjectSelector":[],"enableAccessLog":false,"enableNamespacesByDefault":false,"image":"sidecar_injector","injectLabel":"istio-injection","neverInjectSelector":[],"nodeSelector":{},"podAntiAffinityLabelSelector":[],"podAntiAffinityTermLabelSelector":[],"replicaCount":2,"rewriteAppHTTPProbe":false,"rollingMaxSurge":"100%","rollingMaxUnavailable":"25%","selfSigned":true,"tolerations":[]},"version":""}

  dns-config: |-
    policy: enabled
    alwaysInjectSelector:
      []

    neverInjectSelector:
      []

    template: |
      containers:
      - image: polarismesh/polaris-sidecar:v1.3.0-beta.0
        name: polaris-sidecar
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
            drop:
            - ALL
          privileged: true
          readOnlyRootFilesystem: false
          runAsGroup: 1337
          runAsNonRoot: false
          runAsUser: 1337
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 50Mi
        volumeMounts:
          - mountPath: /root/polaris
            defaultMode: 777
            name: polaris-dir
          - mountPath: /root/log
            defaultMode: 777
            name: polaris-log
      initContainers:
      - name: polaris-sidecar-init
        image: polarismesh/polaris-sidecar-init:v1.3.0-beta.1
        imagePullPolicy: Always
        command: ["./start.sh"]
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 10m
            memory: 10Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: false
          runAsGroup: 0
          runAsNonRoot: false
          runAsUser: 0
      volumes:
        - name: polaris-sidecar-iptables
          configMap:
            defaultMode: 420
            name: polaris-sidecar-iptables
        - name: polaris-dir
          emptyDir: {}
        - name: polaris-log
          emptyDir: {}

  mesh-config: |-
    policy: enabled
    alwaysInjectSelector:
      []

    neverInjectSelector:
      []

    template: |
      containers:
      - name: envoy
        image: envoyproxy/envoy:v1.18.3
        imagePullPolicy: Always
        command: ["/usr/local/bin/envoy"]
        args: ["-c", "/etc/envoy/envoy.yaml", "--log-path", "/etc/envoy_logs/envoy.log"]
        resources:
        {{- if or (isset .ObjectMeta.Annotations `polarismesh.cn/proxyCPU`) (isset .ObjectMeta.Annotations `polarismesh.cn/proxyMemory`) (isset .ObjectMeta.Annotations `polarismesh.cn/proxyCPULimit`) (isset .ObjectMeta.Annotations `polarismesh.cn/proxyMemoryLimit`) }}
          {{- if or (isset .ObjectMeta.Annotations `polarismesh.cn/proxyCPU`) (isset .ObjectMeta.Annotations `polarismesh.cn/proxyMemory`) }}
            requests:
              {{ if (isset .ObjectMeta.Annotations `polarismesh.cn/proxyCPU`) -}}
              cpu: "{{ index .ObjectMeta.Annotations `polarismesh.cn/proxyCPU` }}"
              {{ end }}
              {{ if (isset .ObjectMeta.Annotations `polarismesh.cn/proxyMemory`) -}}
              memory: "{{ index .ObjectMeta.Annotations `polarismesh.cn/proxyMemory` }}"
              {{ end }}
          {{- end }}
          {{- if or (isset .ObjectMeta.Annotations `polarismesh.cn/proxyCPULimit`) (isset .ObjectMeta.Annotations `polarismesh.cn/proxyMemoryLimit`) }}
            limits:
              {{ if (isset .ObjectMeta.Annotations `polarismesh.cn/proxyCPULimit`) -}}
              cpu: "{{ index .ObjectMeta.Annotations `polarismesh.cn/proxyCPULimit` }}"
              {{ end }}
              {{ if (isset .ObjectMeta.Annotations `polarismesh.cn/proxyMemoryLimit`) -}}
              memory: "{{ index .ObjectMeta.Annotations `polarismesh.cn/proxyMemoryLimit` }}"
              {{ end }}
          {{- end }}
        {{- else }}
          {{- if .Values.global.proxy.resources }}
            {{ toYaml .Values.global.proxy.resources | indent 6 }}
          {{- end }}
        {{- end }}
        env:
        - name: ENVOY_UID
          value: "1337"
        volumeMounts:
        - mountPath: /etc/envoy
          name: envoy-bootstrap
          readOnly: false
        - mountPath: /etc/envoy_logs
          name: envoy-logs
          readOnly: false
      - image: polarismesh/polaris-sidecar:v1.3.0-beta.0
        name: polaris-sidecar
        securityContext:
          runAsUser: 1337
          runAsGroup: 1337
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 50Mi
        volumeMounts:
          - mountPath: /root/polaris
            defaultMode: 777
            name: polaris-dir
          - mountPath: /root/log
            defaultMode: 777
            name: polaris-log
      initContainers:
      - name: polaris-bootstrap-writer
        image: polarismesh/polaris-envoy-bootstrap-generator:v1.3.0-beta.1
        imagePullPolicy: Always
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POLARIS_SERVER_URL
          value: {{.ProxyConfig.ProxyMetadata.serverAddress}}:15010
        - name: CLUSTER_NAME
          value: {{.ProxyConfig.ProxyMetadata.clusterName}}
        volumeMounts:
          - mountPath: /var/lib/data
            name: envoy-bootstrap
          - mountPath: /data/polaris-client-config
            name: polaris-client-config
      - name: istio-init
        image: istio/proxyv2:1.11.4
        imagePullPolicy: IfNotPresent
        args:
          - istio-iptables
          - -p
          - "15001"
          - -u
          - "1337"
          - -m
          - REDIRECT
          - -i
          - "10.4.4.4/32"
          - -b
          - "{{ (annotation .ObjectMeta `polarismesh.cn/includeInboundPorts` ``) }}"
          - -x
          - "{{ (annotation .ObjectMeta `polarismesh.cn/excludeOutboundCIDRs` ``) }}"
          - -d
          - "{{ (annotation .ObjectMeta `polarismesh.cn/excludeInboundPorts` ``) }}"
          - -o
          - "{{ (annotation .ObjectMeta `polarismesh.cn/excludeOutboundPorts` ``) }}"
          - --redirect-dns=true
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 10m
            memory: 10Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: false
          runAsGroup: 0
          runAsNonRoot: false
          runAsUser: 0
      volumes:
        - name: polaris-client-config
          emptyDir: {}
        - name: envoy-bootstrap
          emptyDir: {}
        - name: envoy-logs
          emptyDir: {}
        - name: polaris-dir
          emptyDir: {}
        - name: polaris-log
          emptyDir: {}